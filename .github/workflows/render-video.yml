name: Render Remotion Video

on:
  repository_dispatch:
    types: [render-video]

jobs:
  render:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.18.0'
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Install FFmpeg, jq, and Fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg jq fonts-liberation
          fc-list | grep -i liberation

      - name: Log Environment
        run: |
          node --version
          npm list remotion
          ffmpeg -version

      - name: Debug Payload
        env:
          PAYLOAD: ${{ toJson(github.event.client_payload) }}
        run: |
          echo "Client payload: $PAYLOAD"
          echo "Subtitles: ${{ github.event.client_payload.subtitles }}"
          echo "Duration: ${{ github.event.client_payload.duration }}"
          echo "VideoPath: ${{ github.event.client_payload.videoPath }}"

      - name: Download Video from Supabase
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
        run: |
          VIDEO_URL="https://fmkjdrdiifebucfpkbsz.supabase.co/storage/v1/object/public/avatars/${{ github.event.client_payload.videoPath }}"
          echo "Downloading video from $VIDEO_URL"
          curl -L -o input.mp4 "$VIDEO_URL" \
            -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZta2pkcmRpaWZlYnVjZnBrYnN6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIyMTczMzcsImV4cCI6MjA1Nzc5MzMzN30.DpHqHHbpHnW981laR2u37syuQ8L_QEf6116vqsSMwGI" \
            --fail --silent --show-error
        

      - name: Render Video with Remotion
        env:
          SUBTITLES: ${{ toJson(github.event.client_payload.subtitles) }}
          SUBTITLE_POSITION: ${{ github.event.client_payload.subtitlePosition }}
          DURATION: ${{ github.event.client_payload.duration }}
          VIDEO_PATH: https://fmkjdrdiifebucfpkbsz.supabase.co/storage/v1/object/public/avatars/${{ github.event.client_payload.videoPath }}
        run: |
          if [ -z "$SUBTITLES" ] || [ "$SUBTITLES" = "[]" ]; then
            echo "Error: No subtitles provided"
            exit 1
          fi
          # Log subtitles for debugging
          echo "Subtitles JSON: $SUBTITLES"
          # Display subtitles in a formatted way before rendering
          echo "Subtitles to be rendered:"
          echo "$SUBTITLES" | jq -r '.[] | "  - Text: \(.text), Start: \(.start)s, End: \(.end)s"'
          # Create props JSON with correct structure
          PROPS=$(jq -n \
            --arg videoUrl "$VIDEO_PATH" \
            --argjson subtitles "$SUBTITLES" \
            --arg subtitlePosition "$SUBTITLE_POSITION" \
            --argjson duration "$DURATION" \
            '{videoUrl: $videoUrl, subtitles: $subtitles, subtitlePosition: $subtitlePosition, duration: $duration}')
          echo "$PROPS" > props.json
          jq . props.json > /dev/null 2>&1
          if [ $? -ne 0 ]; then
            echo "Error: Invalid PROPS JSON"
            exit 1
          fi
          # Log props for debugging
          echo "Props JSON:"
          cat props.json
          # Render video with verbose logging
          npx remotion render VideoWithSubtitles \
            --props-file props.json \
            --output rendered-video.mp4 \
            --log=verbose 2>&1 | tee remotion.log
          # Check if output file exists and is valid
          ls -l rendered-video.mp4
          if [ ! -s rendered-video.mp4 ]; then
            echo "Error: Rendered video file is empty or not created"
            exit 1
          fi
          # Verify video duration
          ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 rendered-video.mp4
          mkdir -p logs
          mv remotion.log logs/

      - name: Upload Rendered Video as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rendered-video
          path: "*.mp4"
          retention-days: 7

      - name: Upload Remotion Logs
        uses: actions/upload-artifact@v4
        with:
          name: remotion-logs
          path: logs/
          retention-days: 7
